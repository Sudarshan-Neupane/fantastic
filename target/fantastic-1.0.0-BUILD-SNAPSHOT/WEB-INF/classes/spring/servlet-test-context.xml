<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		 http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

    <!-- DispatcherServlet Context: defines this servlet's request-processing 
    infrastructure -->

    <!-- Enables the Spring MVC @Controller programming model -->
    <mvc:annotation-driven />

    <context:component-scan base-package="edu.mum.fantastic" />
    <!-- Handles HTTP GET requests for /resources/** by efficiently serving 
    up static resources in the ${webappRoot}/resources directory -->
    <mvc:resources mapping="/resources/**" location="/resources/" />

    <!-- Resolves views selected for rendering by @Controllers to .jsp resources 
    in the /WEB-INF/views directory -->
    <!-- <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 
    <beans:property name="prefix" value="/WEB-INF/views/" /> <beans:property 
    name="suffix" value=".jsp" /> </beans:bean> -->
    <!--tiles configuration -->
    <!-- <beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver"> 
    <beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView"/> 
    <beans:property name="order" value="-2"/> </beans:bean> <beans:bean id="tilesConfigurer" 
    class="org.springframework.web.servlet.view.tiles2.TilesConfigurer"> <beans:property 
    name="definitions"> <beans:list> <beans:value>/WEB-INF/tiles/definitions/tile-definition.xml</beans:value> 
    </beans:list> </beans:property> </beans:bean> -->

    <!-- Read message.properties file -->
    <bean id="messageSource"
              class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="classpath:messages" />
    </bean>
    <!-- Interceptor for language -->
    <mvc:interceptors>
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <property name="paramName" value="language" />
        </bean>
    </mvc:interceptors>
    <!-- Set default language -->
    <bean id="localeResolver"
              class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
        <property name="defaultLocale" value="en_US" />
    </bean>
    <!-- validator message locator -->
    <bean id="validator"
              class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="validationMessageSource" ref="messageSource" />
    </bean>

    <jpa:repositories base-package="edu.mum.fantastic.repository" />

    <bean
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location">
            <value>classpath:jdbc.properties</value>
        </property>
    </bean>
    <bean id="entityManager"
              class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="edu.mum.fantastic.domain" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">create</prop>
                <prop key="hibernate.dialect">${db.databasePlatform}</prop>
            </props>
        </property>
    </bean>

    <!-- CONSOLE -->
    <!-- <bean id="h2Server" class="org.h2.tools.Server" factory-method="createTcpServer" -->
    <!-- init-method="start" destroy-method="stop" depends-on="h2WebServer"> -->
    <!-- <constructor-arg value="-tcp,-tcpAllowOthers,-tcpPort,9092" /> -->
    <!-- </bean> -->
    <!-- <bean id="h2WebServer" class="org.h2.tools.Server" factory-method="createWebServer" -->
    <!-- init-method="start" destroy-method="stop"> -->
    <!-- <constructor-arg value="-web,-webAllowOthers,-webPort,8082" /> -->
    <!-- </bean> -->

    <bean id="dataSource"
              class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${db.driver}" />
        <property name="url" value="${db.url}" />
        <property name="username" value="${db.username}" />
        <property name="password" value="${db.password}" />
    </bean>
    <!-- ;INIT=runscript from 'classpath:/sqlcreate.sql'\;runscript from 'classpath:populate.sql' -->

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManager" />
    </bean>

    <!-- Scan for transaction-based resources -->
    <context:component-scan base-package="edu.mum.fantastic.serviceimpl" />
    <context:component-scan base-package="edu.mum.fantastic.domain" />
    <context:component-scan base-package="edu.mum.fantastic.repository" />

    <tx:annotation-driven transaction-manager="transactionManager" />

    <bean id="persistenceExceptionTranslationPostProcessor"
              class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

</beans>
