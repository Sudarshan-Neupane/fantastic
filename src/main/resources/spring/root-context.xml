<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="
      http://www.springframework.org/schema/beans 
      http://www.springframework.org/schema/beans/spring-beans.xsd
 	  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
      http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">


    <!-- Root Context: defines shared resources visible to all other web components -->
    <jpa:repositories base-package="edu.mum.fantastic.repository" />

    <bean
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location">
            <value>classpath:jdbc.properties</value>
        </property>
    </bean>
    <bean id="entityManager"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="edu.mum.fantastic.domain" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
        </property>
        <property name="jpaProperties"> 
            <props> 
                <prop key="hibernate.hbm2ddl.auto">create-drop</prop> 
                <prop key="hibernate.dialect">${db.databasePlatform}</prop> 
            </props> 
        </property> 
    </bean>

    <!-- CONSOLE -->
    <!-- 	<bean id="h2Server" class="org.h2.tools.Server" factory-method="createTcpServer" -->
    <!-- 		init-method="start" destroy-method="stop" depends-on="h2WebServer"> -->
    <!-- 		<constructor-arg value="-tcp,-tcpAllowOthers,-tcpPort,9092" /> -->
    <!-- 	</bean> -->
    <!-- 	<bean id="h2WebServer" class="org.h2.tools.Server" factory-method="createWebServer" -->
    <!-- 		init-method="start" destroy-method="stop"> -->
    <!-- 		<constructor-arg value="-web,-webAllowOthers,-webPort,8082" /> -->
    <!-- 	</bean> -->

    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${db.driver}" />
        <property name="url" value="${db.url}" />
        <property name="username" value="${db.username}" />
        <property name="password" value="${db.password}" />
    </bean>
    <!-- ;INIT=runscript from 'classpath:/sqlcreate.sql'\;runscript from 'classpath:populate.sql' -->

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManager" />
    </bean>

    <!-- Scan for transaction-based resources -->
    <context:component-scan base-package="edu.mum.fantastic.serviceimpl" />
    <context:component-scan base-package="edu.mum.fantastic.domain" />
    <context:component-scan base-package="edu.mum.fantastic.repository" />

    <tx:annotation-driven transaction-manager="transactionManager" />

    <bean id="persistenceExceptionTranslationPostProcessor"
          class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
	
</beans>
